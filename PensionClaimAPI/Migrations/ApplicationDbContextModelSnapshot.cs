// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PensionClaimAPI.Data;

#nullable disable

namespace PensionClaimAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PensionClaimAPI.Models.Claim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmploymentEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmploymentStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinalApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InitialApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("PensionClaimAPI.Models.WorkflowNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendNotification")
                        .HasColumnType("bit");

                    b.Property<string>("WorkflowStep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkflowNotifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecipientEmail = "manager@example.com",
                            RecipientType = "MANAGER",
                            SendNotification = true,
                            WorkflowStep = "CLAIM_SUBMISSION"
                        },
                        new
                        {
                            Id = 2,
                            RecipientEmail = "field.officer@example.com",
                            RecipientType = "FIELD_OFFICER",
                            SendNotification = true,
                            WorkflowStep = "FIELD_OFFICER_CONFIRMATION"
                        },
                        new
                        {
                            Id = 3,
                            RecipientEmail = "finance@example.com",
                            RecipientType = "FINANCE_MANAGER",
                            SendNotification = true,
                            WorkflowStep = "FINANCE_APPROVAL"
                        },
                        new
                        {
                            Id = 4,
                            RecipientEmail = "disbursement@example.com",
                            RecipientType = "DISBURSEMENT_OFFICER",
                            SendNotification = true,
                            WorkflowStep = "DISBURSEMENT"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
